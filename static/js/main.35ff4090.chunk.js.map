{"version":3,"sources":["serviceWorker.js","Welcome.js","App.js","index.js"],"names":["register","_register","apply","this","arguments","_callee","publicVapidKey","registration","subscription","regenerator_default","a","wrap","_context","prev","next","navigator","serviceWorker","sent","console","log","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","JSON","stringify","fetch","method","body","headers","content-type","abrupt","endpoint","stop","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","Welcome","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","token","setState","react_default","createElement","React","Component","App","src_Welcome_0","ReactDOM","render","src_App","document","getElementById"],"mappings":"4QAAO,SAAeA,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACCR,EAAiB,4FACnB,kBAAmBS,WAFlB,CAAAH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAG2BC,UAAUC,cAAchB,SAAS,UAH5D,cAGMO,EAHNK,EAAAK,KAKCC,QAAQC,IAAI,uBALbP,EAAAE,KAAA,EAM4BP,EAAaa,YAAYC,UAAU,CAC5DC,iBAAiB,EACjBC,qBAAsBC,EAAsBlB,KAR/C,cAMOE,EANPI,EAAAK,KAUCC,QAAQC,IAAI,sBACZD,QAAQC,IAAIM,KAAKC,UAAUlB,IAE3BU,QAAQC,IAAI,mBAbbP,EAAAE,KAAA,GAcOa,MAAM,aAAc,CACxBC,OAAQ,OACRC,KAAMJ,KAAKC,UAAUlB,GACrBsB,QAAS,CACPC,eAAgB,sBAlBrB,eAqBCb,QAAQC,IAAI,gBArBbP,EAAAoB,OAAA,SAuBQxB,EAAayB,UAvBrB,yBAAArB,EAAAsB,SAAA7B,6BA2BP,SAASmB,EAAsBW,GAS7B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAIF,EAAaG,OAAS,GAAK,IAExDC,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEXC,EAAUC,OAAOC,KAAKN,GACtBO,EAAc,IAAIC,WAAWJ,EAAQF,QAElCO,EAAI,EAAGA,EAAIL,EAAQF,SAAUO,EACpCF,EAAYE,GAAKL,EAAQM,WAAWD,GAEtC,OAAOF,aCVMI,cAxBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/C,KAAA4C,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAnD,KAAM6C,KACDO,MAAQ,CACXC,MAAO,MAHQP,iNAQGjC,WAAfwC,SACNrD,KAAKsD,SAAS,CACGD,MAAOA,uIAMvB,OACEE,EAAAhD,EAAAiD,cAAA,WACED,EAAAhD,EAAAiD,cAAA,kBADF,IACeD,EAAAhD,EAAAiD,cAAA,SAAIxD,KAAKoD,MAAMC,eAnBdI,IAAMC,WCKbC,mLAJX,OAAOJ,EAAAhD,EAAAiD,cAACI,EAAD,aAFOH,IAAMC,kBCExBG,IAASC,OAAOP,EAAAhD,EAAAiD,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.35ff4090.chunk.js","sourcesContent":["export async function register() {\r\n  const publicVapidKey = \"BM4mCdt12AMcID_1Qot-bibPgVAH8R1xEKzyHlaErcEyne-1PQZUWihYedbf9Fp-vbN2AarQglBeINQuq3rM554\";\r\n  if ('serviceWorker' in navigator) {\r\n       const registration = await navigator.serviceWorker.register('/sw.js');\r\n       // Register Push\r\n        console.log(\"Registering Push...\");\r\n        const subscription = await registration.pushManager.subscribe({\r\n          userVisibleOnly: true,\r\n          applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\r\n        });\r\n        console.log(\"Push Registered...\");\r\n        console.log(JSON.stringify(subscription));\r\n        // Send Push Notification\r\n        console.log(\"Sending Push...\");\r\n        await fetch(\"/subscribe\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(subscription),\r\n          headers: {\r\n            \"content-type\": \"application/json\"\r\n          }\r\n        });\r\n        console.log(\"Push Sent...\");\r\n\r\n        return subscription.endpoint;\r\n  }\r\n}\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, \"+\")\r\n    .replace(/_/g, \"/\");\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}","import React from 'react'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './Welcome.css'\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      token: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n   const token =  await serviceWorker.register();\r\n   this.setState({\r\n                    token: token\r\n                  }\r\n                );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Hello</p> <p>{this.state.token}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome\r\n","import React from 'react'\r\nimport Welcome from './Welcome'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <Welcome />\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport 'typeface-roboto'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}